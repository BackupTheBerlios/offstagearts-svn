<?xml version="1.0" encoding="UTF-8"?>
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:mml="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook">
  <title>OffstageArts Administration and Programming</title>

  <chapter>
    <title>Introduction</title>

    <para>OffstageArts is an enterprise arts management system. It integrates
    all aspects of a typical performing arts organization in one place:
    development, marketing, school and ticket sales. For more information,
    see: <uri>http://offstagearts.org</uri>.</para>

    <para>OffstageArts is a Free Software aplication, licensed under the
    GPLv3. All components it uses, along with the devlopment tools needed to
    create it, are also free software. No commercial licenses are required to
    run or develop OffstageArts.</para>

    <para>OffstageArts is implemented as a two-tier client-server database
    application, plus some web-based components. The server runs on the
    PostgreSQL database. The client, meant to be run by organizational staff,
    is at Java Swing application. Portions of OffstageArts --- those used
    directly customers --- are also web-based, written in Ruby.</para>

    <para>Since is build on top of commodity components and protocols, it may
    be deployed in a flexible manner. The database may be accessed over a LAN
    or WAN, and the web server components may be deployed in a variety of
    manners. Technical consulting firms are able to determine and implement
    the best configuration for any particular organization.</para>
  </chapter>

  <chapter>
    <title>Downloading and Compilation</title>

    <section>
      <title>Prerequisites</title>

      <para>The following tools are required to download, compile, edit and
      install OffstageArts. Please download and install each of them on your
      system:</para>

      <orderedlist>
        <listitem>
          <para>A Subversion client. Although it is not free as in freedom, we
          recommend SmartSVN:
          <uri>http://www.syntevo.com/smartsvn/index.html</uri>.</para>
        </listitem>

        <listitem>
          <para>Java JDK version 1.5:
          <uri>http://java.sun.com/javase/downloads/index_jdk5.jsp</uri>.
          OffstageArts has not been tested with Java version 1.6.</para>
        </listitem>

        <listitem>
          <para>NetBeans 6.0: <uri>http://www.netbeans.org/</uri>. As a
          Swing-based application, OffstageArts makes extensive use of the
          visual form builder in NetBeans. Eclipse unfortunately does not have
          a well-developed visual builder.</para>
        </listitem>

        <listitem>
          <para>Apache Maven build tool version 2:
          <uri>http://maven.apache.org/</uri>. We use Maven because of its
          excellent dependency resolution. A command line-based Maven is
          required, in addition to the one built into NetBeans.</para>
        </listitem>

        <listitem>
          <para>This document was created using the DocBook 5+ XML DTD in the
          XMLMind XML editor (Personal Edition):
          <uri>http://www.xmlmind.com/xmleditor/download.shtml</uri>. It is
          also not free as in freedom, but it is an excellent GUI-based
          product.</para>
        </listitem>
      </orderedlist>
    </section>

    <section>
      <title>Configure Software</title>

      <para>After downloading the above tools, it is necessary to configure
      them.</para>

      <orderedlist>
        <listitem>
          <para>NetBeans:</para>

          <orderedlist>
            <listitem>
              <para>Make sure you make available to NetBeans the Java sources
              and Javadoc for your version of the JDK. This will allow
              NetBeans to give context-sensitive documentation help, as well
              as to take you to the source code of Java platform classes when
              you Ctrl-click on them. To integrate Java sources and Javadoc,
              start NetBeans and go to Tools-&gt;Java Platform.</para>
            </listitem>

            <listitem>
              <para>Go to Tools-&gt;Options-&gt;Editor-&gt;Indentation.
              Un-check 'Expand Tabs to Spaces." Set "Number of Spaces per
              Indent" and "Tab Size" both to 4.</para>
            </listitem>

            <listitem>
              <para>If you are behind a firewall, configure your HTTP proxy
              via Tools-&gt;Options-&gt;General.</para>
            </listitem>

            <listitem>
              <para>Go to Tools-&gt;Plugins-&gt;Available Plugins. If your
              HTTP proxy settings are not set right, you will see a blank
              screen. Once you see something, make a checkmark by "Maven" and
              click the "Install" button on the lower-left. Follow
              instructions.</para>
            </listitem>
          </orderedlist>
        </listitem>

        <listitem>
          <para>SmartSVN:</para>

          <orderedlist>
            <listitem>
              <para>Add the source code repositories to your system.</para>

              <orderedlist>
                <listitem>
                  <para>Repository-&gt;Mange Profiles-&gt;Add.</para>
                </listitem>

                <listitem>
                  <para>Click on "Enter SVN URL".</para>
                </listitem>

                <listitem>
                  <para>Enter
                  <uri>http://svn.berlios.de/svnroot/repos/holyokefw</uri></para>
                </listitem>

                <listitem>
                  <para>Do the same for:
                  <uri>http://svn.berlios.de/svnroot/repos/offstagearts</uri></para>
                </listitem>
              </orderedlist>
            </listitem>
          </orderedlist>
        </listitem>
      </orderedlist>
    </section>

    <section>
      <title>Check Out the Source Code</title>

      <para>OffstageArts depends on a large number of independent projects.
      Two of those are downloaded in source code format along with
      OffstageArts; the rest are available as JAR files either from the
      standard Maven repository, or are included in the source trees.</para>

      <para>Three source-based NetBeans/Maven projects are required to compile
      and run OffstageArts. These can be obtained by checking out the
      following source code modules into one directory (say, ~/mvn):</para>

      <orderedlist>
        <listitem>
          <para><filename>trunk/offstagearts</filename> from the offstagearts
          repository.</para>
        </listitem>

        <listitem>
          <para><filename>trunk/holyokefw</filename> from the holyokefw
          repository.</para>
        </listitem>

        <listitem>
          <para><filename>trunk/objcobra</filename> from the holyokefw
          repository.</para>
        </listitem>
      </orderedlist>
    </section>

    <section>
      <title>Open the Projects and Install into the Maven Repository</title>

      <para>Once you have downloaded all source code, use File-&gt;Open
      Project on the three project directories. If NetBeans does not recognize
      them as project directories, you might not have your Maven option
      installed. With all three projects open, set offstagearts as the main
      project in NetBeans: right-click on it and choose "Set as Main
      Project."</para>

      <para>Now, run the following commands to install required JAR files into
      your Maven repository. (You may use Cygwin on Windows, or rename the
      install.sh files to Windows .bat files).</para>

      <programlisting>cd ~/mvn/objcobra/lib
sh ./install.sh
cd ~/mvn/holyokefw/lib
sh ./install.sh
cd ~/mvn/offstagearts/lib
sh ./install.sh</programlisting>
    </section>

    <section>
      <title>Add Typed Widgets to NetBeans</title>

      <para>The Holyoke Framework provides a set of <emphasis>typed
      widgets</emphasis> that subclass from standard Swing widgets and allow
      for the easy creation of GUI screens. In order to see the typed widgets
      in the NetBeans visual builder, they must be compiled as a .nbm module
      and loaded into NetBeans. This is accomplished as follows:</para>

      <orderedlist>
        <listitem>
          <para>Clean and compile objcobra.</para>
        </listitem>

        <listitem>
          <para>Clean and compile holyokefw.</para>
        </listitem>

        <listitem>
          <para>Run the project (F6 in NetBeans).</para>
        </listitem>

        <listitem>
          <para>Select <literal>MakeNbm</literal> from the dialog box that
          appears.</para>
        </listitem>

        <listitem>
          <para>When it is done running, you should now have the file
          <filename>~/mvn/holyokefw/target/holyokefw-1.0-SNAPSHOT.nbm</filename>.</para>
        </listitem>

        <listitem>
          <para>In NetBeans, use Tools-&gt;Plugins-&gt;Downloaded. Click on
          the "Add Plugins..." button. Select the .nbm file created above.
          Then click on the "Install" button in the lower left hand
          corner.</para>
        </listitem>
      </orderedlist>
    </section>

    <section>
      <title>Compile and Run OffstageArts</title>

      <para>To do a clean compile of OffstageArts:</para>

      <orderedlist>
        <listitem>
          <para>Clean and compile objcobra.</para>
        </listitem>

        <listitem>
          <para>Clean and compile holyokefw.</para>
        </listitem>

        <listitem>
          <para>Clean and compile offstagearts.</para>
        </listitem>

        <listitem>
          <para>Press F6 in NetBeans to run, Ctrl-F5 to debug.</para>
        </listitem>
      </orderedlist>
    </section>
  </chapter>

  <chapter>
    <title>Database Administration</title>

    <para>OffstageArts requires a database hosted on a server running
    PostgreSQL version 8 or higher. Although database administrators may
    choose to set up databases in a variety of different ways, we have
    provided scripts in the <filename>serverscripts</filename> directory of
    offstagearts. These scripts set up a dedicated PostgreSQL server that
    hosts a number of databases, in which the username and the database name
    are the same.</para>

    <para>To intialize the server for use with OffstageArts:</para>

    <programlisting>./initserver.sh</programlisting>

    <para>The following creates a new user/database pair named
    "danceschool":</para>

    <para><programlisting>./newuser.sh danceschool &lt;password&gt;   # create user and database
./initdb.sh danceshool                # load auto-generated database schema
./initdata.sh danceschool             # laod initial data into database</programlisting>These
    scripts may need modification, depending on your local PostgreSQL
    installation.</para>
  </chapter>

  <chapter>
    <title>Database Schema</title>

    <para></para>

    <section>
      <title>Core CRM</title>

      <para><glosslist>
          <glossentry>
            <glossterm>entities</glossterm>

            <glossdef>
              <para>The main table to store each person or organization's
              record.</para>
            </glossdef>
          </glossentry>
        </glosslist></para>
    </section>

    <section>
      <title>Accounting</title>

      <para></para>
    </section>

    <section>
      <title>School</title>

      <para></para>
    </section>

    <section>
      <title>DB Administration</title>

      <para></para>
    </section>

    <section>
      <title>Misc.</title>

      <para></para>
    </section>
  </chapter>
</book>