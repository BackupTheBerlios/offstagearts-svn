/*
 * AccountsPanel.java
 *
 * Created on December 10, 2007, 1:01 AM
 */

package offstage.accounts.gui;

import citibob.jschema.IntsKeyedDbModel;
import citibob.jschema.SchemaBuf;
import citibob.sql.RsRunnable;
import citibob.sql.SqlRun;
import citibob.sql.pgsql.*;
import citibob.task.BatchTask;
import citibob.task.JobMap;
import citibob.wizard.Wizard;
import offstage.FrontApp;

/**
 *
 * @author  citibob
 */
public class TransRegPanel extends javax.swing.JPanel
{
	
public IntsKeyedDbModel actransDb;
FrontApp fapp;
JobMap taskMap;

/** Creates new form AccountsPanel */
public TransRegPanel()
{
	initComponents();
}

public IntsKeyedDbModel getDbModel() { return actransDb; }

/** @param superuser Should we allow superuser access to this stuff? */
public void initRuntime(FrontApp fapp, SchemaBuf actransSb, int actypeid, boolean superuser)
{
	this.fapp = fapp;
	actransDb = new IntsKeyedDbModel(actransSb, new String[] {"entityid", "actypeid"}, true);
	actransDb.setKey(1, actypeid);
	actransDb.setWhereClause(
//		" actypeid = " + SqlInteger.sql(ActransSchema.AC_SCHOOL) +
		" now()-date < '450 days'");
	actransDb.setOrderClause("date desc, actransid desc");
	trans.setModelU(actransDb.getSchemaBuf(),
		new String[] {"Status", "Type", "Date", "Amount", "Description"},
		new String[] {"__status__", "actranstypeid", "date", "amount", "description"},
		new String[] {null, null, null, null, "description"},
		superuser ? new boolean[] {false,false,true,true,true} : null,
//		new boolean[] {false, false, false, false},
		fapp.swingerMap());
	actransDb.setLogger(fapp.queryLogger());

	// Set up the task map, which will be used to bind actions to buttons
	taskMap = new JobMap();
	String[] permissions = null;
	taskMap.add("cash", permissions, new RunWizard("cashpayment"));
	taskMap.add("check", permissions, new RunWizard("checkpayment"));
	taskMap.add("cc", permissions, new RunWizard("ccpayment"));
	taskMap.add("other", permissions, new RunWizard("transtype"));
	taskMap.add("delete", permissions, new BatchTask() {
	public void run(SqlRun str) throws Exception {
		SchemaBuf sb = actransDb.getSchemaBuf();
		sb.deleteRow(trans.getSelectedRow());
	}});

}

public JobMap getTaskMap() { return taskMap; }
public Integer getEntityID() { return actransDb.getIntKey(0); }
public Integer getAcTypeID() { return actransDb.getIntKey(1); }


public void setEntityID(SqlRun str, Integer entityid) // throws SQLException
{
	actransDb.setKey(0, entityid);
	refresh(str);
}
public void setAcTypeID(SqlRun str, int actypeid)
{
	actransDb.setKey(1, actypeid);
	refresh(str);	
}
public void refresh(SqlRun str) // throws SQLException
{
	actransDb.doSelect(str);
	
	// Set up account balance
	acbal.setJType(Double.class, java.text.NumberFormat.getCurrencyInstance());
	Integer entityid = actransDb.getIntKey(0);
	Integer actransid = actransDb.getIntKey(1);
	String sql =
		AccountsDB.w_tmp_acct_balance_sql("select " + entityid + " as id", actransid) +
		" select bal from _bal;\n" +
		" drop table _bal;";
	str.execSql(sql, new RsRunnable() {
	public void run(citibob.sql.SqlRun str, java.sql.ResultSet rs) throws Exception {
		rs.next();
		acbal.setValue(rs.getDouble(1));
	}});
	
//	
//	
//	DB.r_acct_balance("bal", str, , ,
//	new UpdRunnable() { public void run(SqlRunner str) throws Exception {
//		acbal.setValue(str.get("bal"));
//	}});
}


	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        TopPane = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        acbal = new citibob.swing.typed.JTypedLabel();
        GroupScrollPanel1 = new javax.swing.JScrollPane();
        trans = new citibob.jschema.swing.SchemaBufTable();

        setLayout(new java.awt.BorderLayout());

        TopPane.setLayout(new java.awt.GridBagLayout());

        jLabel18.setText("Balance: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        TopPane.add(jLabel18, gridBagConstraints);

        acbal.setText("2500");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        TopPane.add(acbal, gridBagConstraints);

        add(TopPane, java.awt.BorderLayout.NORTH);

        trans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        GroupScrollPanel1.setViewportView(trans);

        add(GroupScrollPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane GroupScrollPanel1;
    private javax.swing.JPanel TopPane;
    private citibob.swing.typed.JTypedLabel acbal;
    private javax.swing.JLabel jLabel18;
    private citibob.jschema.swing.SchemaBufTable trans;
    // End of variables declaration//GEN-END:variables

// =========================================================
class RunWizard implements BatchTask
{
String startState;
public RunWizard(String startState) { this.startState = startState; }
public void run(SqlRun str) throws Exception {
	int entityid = getEntityID();
	Wizard wizard = new TransactionWizard(fapp, TransRegPanel.this, entityid, getAcTypeID());
	wizard.setVal("entityid", entityid);
	wizard.runWizard(startState);
	refresh(str);
}
}

}
